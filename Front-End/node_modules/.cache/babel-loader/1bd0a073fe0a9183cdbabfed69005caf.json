{"ast":null,"code":"var _jsxFileName = \"/home/shakthivel/Documents/Masters/Coursework/CMPE-202-Software-Systems-Engineering/Group Project/Front-End/src/components/Navigationbar/Navigationbar.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport './Navigationbar.css';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Button, Dropdown, Image } from 'react-bootstrap';\nimport BACKEND_URL from '../../constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Navigationbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserProfileImage = async () => {\n      const {\n        userId,\n        authenticationToken\n      } = this.state;\n\n      if (authenticationToken !== null) {\n        const res = await axios.get(`${BACKEND_URL}/profilePage/getImage`, {\n          params: {\n            userId\n          }\n        });\n        this.setState({\n          imagePreview: res.data.userImage\n        });\n      }\n    };\n\n    this.handleLogout = () => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n    };\n\n    this.state = {\n      userId: localStorage.getItem('userId'),\n      authenticationToken: localStorage.getItem('token'),\n      imagePreview: null\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.getUserProfileImage = this.getUserProfileImage.bind(this);\n  }\n\n  async componentDidMount() {\n    this.getUserProfileImage();\n  }\n\n  render() {\n    let navLogin = null;\n    let profileImage = null;\n    const {\n      authenticationToken,\n      imagePreview\n    } = this.state;\n    const {\n      refreshBitLocal,\n      onProfileImageUploadAction\n    } = this.props;\n\n    if (refreshBitLocal) {\n      this.getUserProfileImage();\n      const modifiedRefreshBitLocal = !refreshBitLocal;\n      const modifiedRefreshBitLocalObject = {\n        modifiedRefreshBitLocal\n      };\n      onProfileImageUploadAction(modifiedRefreshBitLocalObject);\n    }\n\n    if (authenticationToken) {\n      profileImage = /*#__PURE__*/_jsxDEV(Image, {\n        src: imagePreview,\n        width: 70,\n        roundedCircle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this);\n    }\n\n    if (authenticationToken) {\n      navLogin = /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            id: \"dropdown-basic\",\n            children: \"Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: '/profilepage'\n                },\n                children: \"Profile Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: '/creategroup'\n                },\n                children: \"Create Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: this.handleLogout,\n              href: \"/\",\n              children: \"Sign Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    } else {\n      navLogin = /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ml-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"navbarlogin\",\n          className: \"mr-sm-2 navbarbuttons\",\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"navbarbuttons\",\n          href: \"/register\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        id: \"nav-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            id: \"nav-brand\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              src: `${window.location.origin}/splitwise-logo.png`,\n              width: \"30\",\n              height: \"30\",\n              className: \"d-inline-block align-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Link, {\n              id: \"dashboardLink\",\n              to: {\n                pathname: '/dashboard'\n              },\n              children: \"Splitwise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), navLogin, profileImage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  refreshBitLocal: state.refreshBitProfileImage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onProfileImageUploadAction: userData => dispatch({\n    type: 'RENDER_PROFILE_IMAGE',\n    value: userData\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigationbar);","map":{"version":3,"sources":["/home/shakthivel/Documents/Masters/Coursework/CMPE-202-Software-Systems-Engineering/Group Project/Front-End/src/components/Navigationbar/Navigationbar.js"],"names":["React","Component","axios","connect","Link","Navbar","Nav","Button","Dropdown","Image","BACKEND_URL","Navigationbar","constructor","props","getUserProfileImage","userId","authenticationToken","state","res","get","params","setState","imagePreview","data","userImage","handleLogout","localStorage","removeItem","getItem","bind","componentDidMount","render","navLogin","profileImage","refreshBitLocal","onProfileImageUploadAction","modifiedRefreshBitLocal","modifiedRefreshBitLocalObject","pathname","window","location","origin","mapStateToProps","refreshBitProfileImage","mapDispatchToProps","dispatch","userData","type","value"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport './Navigationbar.css';\nimport { Link } from 'react-router-dom';\nimport {\n  Navbar, Nav, Button, Dropdown, Image,\n} from 'react-bootstrap';\nimport BACKEND_URL from '../../constants/constants';\n\nclass Navigationbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: localStorage.getItem('userId'),\n      authenticationToken: localStorage.getItem('token'),\n      imagePreview: null,\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.getUserProfileImage = this.getUserProfileImage.bind(this);\n  }\n\n  async componentDidMount() {\n    this.getUserProfileImage();\n  }\n\n  getUserProfileImage = async () => {\n    const { userId, authenticationToken } = this.state;\n    if (authenticationToken !== null) {\n      const res = await axios.get(`${BACKEND_URL}/profilePage/getImage`, { params: { userId } });\n      this.setState({\n        imagePreview: res.data.userImage,\n      });\n    }\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n  }\n\n  render() {\n    let navLogin = null;\n    let profileImage = null;\n    const { authenticationToken, imagePreview } = this.state;\n    const {\n      refreshBitLocal, onProfileImageUploadAction,\n    } = this.props;\n    if (refreshBitLocal) {\n      this.getUserProfileImage();\n      const modifiedRefreshBitLocal = !refreshBitLocal;\n      const modifiedRefreshBitLocalObject = { modifiedRefreshBitLocal };\n      onProfileImageUploadAction(modifiedRefreshBitLocalObject);\n    }\n    if (authenticationToken) {\n      profileImage = <Image src={imagePreview} width={70} roundedCircle />;\n    }\n    if (authenticationToken) {\n      navLogin = (\n        <Nav className=\"ml-auto\">\n          <Dropdown>\n            <Dropdown.Toggle id=\"dropdown-basic\">\n              Menu\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <Link to={{\n                  pathname: '/profilepage',\n                }}\n                >\n                  Profile Page\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link to={{\n                  pathname: '/creategroup',\n                }}\n                >\n                  Create Group\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item onClick={this.handleLogout} href=\"/\">Sign Out</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n      );\n    } else {\n      navLogin = (\n        <Nav className=\"ml-auto\">\n          <Button id=\"navbarlogin\" className=\"mr-sm-2 navbarbuttons\" href=\"/login\">Login</Button>\n          <Button className=\"navbarbuttons\" href=\"/register\">Sign Up</Button>\n        </Nav>\n      );\n    }\n    return (\n      <div>\n        <Navbar id=\"nav-bar\">\n          <div className=\"container\">\n            <Navbar.Brand id=\"nav-brand\">\n              <img\n                alt=\"\"\n                src={`${window.location.origin}/splitwise-logo.png`}\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />\n              {' '}\n              <Link\n                id=\"dashboardLink\"\n                to={{\n                  pathname: '/dashboard',\n                }}\n              >\n                Splitwise\n              </Link>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            {navLogin}\n            {profileImage}\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  refreshBitLocal: state.refreshBitProfileImage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onProfileImageUploadAction: (userData) => dispatch({ type: 'RENDER_PROFILE_IMAGE', value: userData }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigationbar);\n"]},"metadata":{},"sourceType":"module"}